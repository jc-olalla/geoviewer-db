name: Catalog Provisioner

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  # 1) Quick sanity check against a throwaway Postgres 16
  smoke-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build migrator image
        run: docker build -f Dockerfile.migrator -t catalog-migrator:latest .

      - name: Bootstrap (schemas/initial tenants) on ephemeral DB
        run: |
          docker run --rm \
            --add-host=host.docker.internal:host-gateway \
            -v "${GITHUB_WORKSPACE}/tenants.yaml:/work/tenants.yaml:ro" \
            catalog-migrator:latest \
            bootstrap --tenants /work/tenants.yaml \
            --admin-dsn "postgresql://postgres:postgres@host.docker.internal:5432/postgres"

      - name: Print tenant DSN map (artifact)
        run: |
          docker run --rm \
            -v "${GITHUB_WORKSPACE}/tenants.yaml:/work/tenants.yaml:ro" \
            catalog-migrator:latest \
            print-env --tenants /work/tenants.yaml | tee tenant_dsn_map.txt

      - name: Upload DSN map
        uses: actions/upload-artifact@v4
        with:
          name: tenant-dsn-map
          path: tenant_dsn_map.txt

  # 2) Apply to production (Supabase or any Postgres) â€” uses Environment "prod"
  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ smoke-test ]
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build migrator image
        run: docker build -f Dockerfile.migrator -t catalog-migrator:latest .

      - name: Bootstrap (prod)
        env:
          DB_URL: ${{ secrets.DB_URL }}
        run: |
          docker run --rm \
            -v "${GITHUB_WORKSPACE}/tenants.yaml:/work/tenants.yaml:ro" \
            catalog-migrator:latest \
            bootstrap --tenants /work/tenants.yaml \
            --admin-dsn "${DB_URL}"
